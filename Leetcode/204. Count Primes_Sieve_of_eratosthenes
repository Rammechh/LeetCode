Count the number of prime numbers less than a non-negative number, n.

 

Example 1:

Input: n = 10
Output: 4
Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.
Example 2:

Input: n = 0
Output: 0
Example 3:

Input: n = 1
Output: 0


------------------------------------------Solution----------------------------------------------------------
1)
class Solution:
    def countPrimes(self, n: int) -> int:
        if n<2:
            return 0
        primes=[1]*n
        primes[0]=0
        primes[1]=0
        for i in range(2,int(math.sqrt(n))+1):
            if primes[i]==1:
                for j in range(i*i,n,i):
                    primes[j]=0
        return(primes.count(1))
		

2)		
class Solution:
    def countPrimes(self, n: int) -> int:
        def prime(n):
            count=0
            primes=[True]*(n+1)
            primes[0]=False
            primes[1]=False
            for p in range(2,int(sqrt(n))+1):
                if primes[p]==True:
                    for i in range(p*p,n+1,p):
                        primes[i]=False
            for i in range(0,len(primes)):
                if primes[i]==True:
                    count+=1
            return(count)
        if n==0 or n==1:
            return 0
        else:
            return prime(n-1)