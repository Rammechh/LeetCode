445. Add Two Numbers II
Medium

2364

201

Add to List

Share
You are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

 

Example 1:


Input: l1 = [7,2,4,3], l2 = [5,6,4]
Output: [7,8,0,7]
Example 2:

Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [8,0,7]
Example 3:

Input: l1 = [0], l2 = [0]
Output: [0]
 

Constraints:

The number of nodes in each linked list is in the range [1, 100].
0 <= Node.val <= 9
It is guaranteed that the list represents a number that does not have leading zeros.



----------------------------------------------------------------------Solution-----------------------------------------------------------------------------

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        Str=""
        num1,num2=[],[]
        while l1:
            num1.append(l1.val)
            l1=l1.next
        while l2:
            num2.append(l2.val)
            l2=l2.next
        num1=num1[::-1]
        num2=num2[::-1]
        c=0
        if len(num1)>len(num2):
            num1,num2=num2,num1
        for i in range(len(num1)):
            Sum=num1[i]+num2[i]+c
            Str+=str(Sum%10)
            if Sum>9:
                c=1
            else:
                c=0
        print(c)
        for j in num2[i+1:]:
            Sum=j+c
            print(Sum)
            Str+=str(Sum%10)
            if Sum>9:
                c=1
            else:
                c=0
        if c:
            Str+=str(c)
        return ListNode(",".join(Str[::-1]))         
		
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------